{"version":3,"sources":["TodoItem.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItemWrapper","styled","div","TodoContent","props","isDone","TodoButtonWrapper","Button","button","Finished","label","TodoItem","todo","handleDeleteTodo","handleToggleClick","data-todo-id","id","content","onClick","Wrapper","App","useState","todos","setTodos","value","setValue","filter","setFilter","useRef","handleButtonClick","current","map","type","placeholder","onChange","e","target","onKeyDown","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAGMA,EAAkBC,IAAOC,IAAV,0JAQfC,EAAcF,IAAOC,IAAV,sDAGb,SAAAE,GAAK,OAAIA,EAAMC,QAAN,8CAKPC,EAAoBL,IAAOC,IAAV,0BAEjBK,EAASN,IAAOO,OAAV,2HAWNC,EAAWR,IAAOS,MAAV,6DAIC,SAASC,EAAT,GAAmE,IAA9CC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,iBAAkBC,EAAqB,EAArBA,kBAS1D,OACE,eAACd,EAAD,CAAiBe,eAAcH,EAAKI,GAApC,UACE,cAACb,EAAD,CAAaE,OAAQO,EAAKP,OAA1B,SAAmCO,EAAKK,UACxC,eAACX,EAAD,WACE,cAACC,EAAD,CAAQW,QAZO,WACnBJ,EAAkBF,EAAKI,KAWnB,SACIJ,EAAKP,OAAS,cAACI,EAAD,mBAA4B,SAE9C,cAACF,EAAD,CAAQW,QAXO,WACnBL,EAAiBD,EAAKI,KAUlB,0BC/CR,IAAMG,EAAUlB,IAAOC,IAAV,mDAuGEkB,MAnGf,WAAgB,IAAD,EACaC,mBAAS,CACjC,CAACL,GAAI,EAAGC,QAAS,qBAAOZ,QAAQ,GAChC,CAACW,GAAI,EAAGC,QAAS,qBAAOZ,QAAQ,KAHrB,mBACNiB,EADM,KACCC,EADD,OAKaF,mBAAS,IALtB,mBAKNG,EALM,KAKCC,EALD,OAMeJ,mBAAS,OANxB,mBAMNK,EANM,KAMEC,EANF,KAOPX,EAAKY,iBAAO,GAEZC,EAAoB,WACxBN,EAAS,CACN,CACDP,GAAIA,EAAGc,QACPb,QAASO,IAHH,mBAIAF,KAERG,EAAS,IACTT,EAAGc,WAGCjB,EAAmB,SAAAG,GACvBO,EAASD,EAAMI,QAAO,SAAAd,GAAI,OAAIA,EAAKI,KAAOA,OActCF,EAAoB,SAAAE,GACxBO,EAASD,EAAMS,KAAI,SAAAnB,GACjB,OAAIA,EAAKI,KAAOA,EAAWJ,EACpB,2BACFA,GADL,IAEEP,QAASO,EAAKP,cAqBpB,OACE,eAACc,EAAD,WACE,4CACA,uBACEK,MAAOA,EACPQ,KAAK,OACLC,YAAY,WACZC,SA5CoB,SAAAC,GACxBV,EAASU,EAAEC,OAAOZ,QA4Cda,UAzCmB,SAAAF,GACnBA,EAAEC,OAAOZ,OACA,UAAVW,EAAEG,KACHT,OAwCA,wBAAQX,QAASW,EAAjB,sBAGA,gCACE,wBAAQX,QA9BC,WACbS,EAAU,QA6BN,iBACA,wBAAQT,QA3BQ,WACpBS,EAAU,WA0BN,yBACA,wBAAQT,QAxBM,WAClBS,EAAU,SAuBN,kBACA,wBAAQT,QArBG,WACfK,EAAS,KAoBL,0BAGAD,EACGI,QAAO,SAAAd,GACN,MAAe,SAAXc,EAA0Bd,EAAKP,OACpB,WAAXqB,GAA6Bd,EAAKP,OAC/BO,KAERmB,KAAI,SAACnB,GAAD,OACH,cAACD,EAAD,CAEEC,KAAMA,EACNC,iBAAkBA,EAClBC,kBAAmBA,GAHdF,EAAKI,WCtFTuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e427adc3.chunk.js","sourcesContent":["import {useState, useRef} from 'react'\r\nimport styled from 'styled-components';\r\n\r\nconst TodoItemWrapper = styled.div`\r\n  display: flex;\r\n  align-item: center;\r\n  justify-content: space-between;\r\n  padding: 8px 16px;\r\n  border: 1px solid black;\r\n`\r\n\r\nconst TodoContent = styled.div`\r\n  color: black;\r\n\r\n  ${props => props.isDone && `\r\n    text-decoration: line-through;\r\n  `}\r\n`\r\n\r\nconst TodoButtonWrapper = styled.div``\r\n\r\nconst Button = styled.button`\r\n  padding: 4px;\r\n\r\n  &:hover {\r\n    color: red;\r\n  }\r\n\r\n  & + & {\r\n    margin-left: 4px;\r\n  }\r\n`\r\nconst Finished = styled.label`\r\n  text-decoration: line-through\r\n`\r\n\r\nexport default function TodoItem ({ todo, handleDeleteTodo, handleToggleClick }) {\r\n  const handleToggle = () => {\r\n    handleToggleClick(todo.id)\r\n  }\r\n\r\n  const handleDelete = () => {\r\n    handleDeleteTodo(todo.id)\r\n  }\r\n\r\n  return (\r\n    <TodoItemWrapper data-todo-id={todo.id}>\r\n      <TodoContent isDone={todo.isDone}>{todo.content}</TodoContent>\r\n      <TodoButtonWrapper>\r\n        <Button onClick={handleToggle}>\r\n          { todo.isDone ? <Finished>Done</Finished> : 'Done' }\r\n        </Button>\r\n        <Button onClick={handleDelete} >\r\n          Delete\r\n        </Button>\r\n      </TodoButtonWrapper>\r\n    </TodoItemWrapper>\r\n  )\r\n}","import {useState, useRef} from 'react'\nimport './App.css';\nimport styled from 'styled-components';\nimport TodoItem from './TodoItem';\n\nconst Wrapper = styled.div`\n  text-align: center;\n`\n\nfunction App() {\n  const [todos, setTodos] = useState([\n    {id: 1, content: '吃便當', isDone: true},\n    {id: 2, content: '打籃球', isDone: false}\n  ])\n  const [value, setValue] = useState('')\n  const [filter, setFilter] = useState('all')\n  const id = useRef(3)\n\n  const handleButtonClick = () => {\n    setTodos(\n      [{\n      id: id.current,\n      content: value\n      }, ...todos]\n    )\n    setValue('')\n    id.current++\n  }\n\n  const handleDeleteTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id))\n  }\n\n  const handleInputChange = e => {\n    setValue(e.target.value)\n  }\n\n  const handleEnterInput = e => {\n    if(!e.target.value) return\n    if(e.key === 'Enter') {\n      handleButtonClick()\n    }\n  }\n\n  const handleToggleClick = id => {\n    setTodos(todos.map(todo => {\n      if (todo.id !== id) return todo\n      return {\n        ...todo,\n        isDone: !todo.isDone\n      }\n    }))\n  }\n\n  const getAll = () => {\n    setFilter('all')\n  }\n\n  const getUnfinished = () => {\n    setFilter('undone')\n  }\n\n  const getFinished = () => {\n    setFilter('done')\n  }\n\n  const cleanAll = () => {\n    setTodos([])\n  }\n\n  return (\n    <Wrapper>\n      <div>Todo List</div>\n      <input \n        value={value}\n        type=\"text\"\n        placeholder=\"add todo\"\n        onChange={handleInputChange}\n        onKeyDown={handleEnterInput}\n      />\n      <button onClick={handleButtonClick}>\n        Add Todo\n      </button>\n      <div>\n        <button onClick={getAll}>All</button>\n        <button onClick={getUnfinished}>In progress</button>\n        <button onClick={getFinished}>Done</button>\n        <button onClick={cleanAll}>Clean All</button>\n      </div>\n      {\n        todos\n          .filter(todo => {\n            if (filter === \"done\") return todo.isDone\n            if (filter === \"undone\") return !todo.isDone\n            return todo\n          })\n          .map((todo) => \n            <TodoItem \n              key={todo.id}\n              todo={todo}\n              handleDeleteTodo={handleDeleteTodo}  \n              handleToggleClick={handleToggleClick}\n            />)\n      }\n    </Wrapper>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}